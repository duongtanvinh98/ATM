/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package atm;

import static atm.Account.MoreAccount;
import static atm.Customer.MoreCustomes;
import java.sql.SQLException;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author PC
 */
public class DangKyTaiKhoan extends javax.swing.JPanel {

    /**
     * Creates new form DangKyTaiKhoan
     */
    public DangKyTaiKhoan() {
        initComponents();     
        String code= String.valueOf(random());
        txtRdcode.setText(code);
        txtRdcode.setEditable(false);
        txtSodu.setEditable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtHo = new javax.swing.JTextField();
        txtTen = new javax.swing.JTextField();
        txtCMND = new javax.swing.JTextField();
        txtNgaysinh = new javax.swing.JTextField();
        txtSodu = new javax.swing.JTextField();
        txtMatkhau = new javax.swing.JPasswordField();
        txtCode = new javax.swing.JTextField();
        txtRdcode = new javax.swing.JTextField();
        btnDangky = new javax.swing.JButton();
        btnThoat = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        jLabel1.setText("Đăng ký tài khoản");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel2.setText("Họ");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel3.setText("CMND");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel4.setText("Số dư");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel5.setText("Mã xác nhận");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel6.setText("Tên");

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel7.setText("Ngày sinh");

        jLabel8.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel8.setText("Mật khẩu");

        txtSodu.setText("0.0");
        txtSodu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSoduActionPerformed(evt);
            }
        });

        btnDangky.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnDangky.setForeground(new java.awt.Color(0, 0, 204));
        btnDangky.setText("Đăng ký");
        btnDangky.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDangkyActionPerformed(evt);
            }
        });

        btnThoat.setBackground(new java.awt.Color(204, 204, 204));
        btnThoat.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnThoat.setForeground(new java.awt.Color(204, 0, 0));
        btnThoat.setText("Thoát");
        btnThoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThoatActionPerformed(evt);
            }
        });

        btnRefresh.setIcon(new javax.swing.ImageIcon("D:\\Source Code for Java\\ATM\\1.png")); // NOI18N
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(299, 299, 299)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(98, 98, 98)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel5)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel2)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtCode, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtRdcode, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(btnDangky))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnThoat)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtHo)
                                    .addComponent(txtCMND)
                                    .addComponent(txtSodu, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(53, 53, 53)
                                        .addComponent(jLabel8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtMatkhau, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(49, 49, 49)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel6)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel7)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(txtNgaysinh, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                                                    .addComponent(txtTen))))))))))
                .addContainerGap(165, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtTen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtHo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)
                        .addComponent(jLabel6)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtNgaysinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(txtCMND, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8)
                        .addComponent(txtSodu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtMatkhau, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(txtCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtRdcode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDangky)
                    .addComponent(btnThoat))
                .addContainerGap(54, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    private int DangKyKh(){
        int kq=0;
        String ho=txtHo.getText();
        String ten=txtTen.getText();
        int cmnd=Integer.parseInt(txtCMND.getText());
        String ngsinh=txtNgaysinh.getText();
        Customer cus;
        try {
            cus = MoreCustomes(ho, ten, cmnd, ngsinh, "Normal");
            kq=cus.getCustomerid();
              
            } catch (SQLException ex) {
                Logger.getLogger(DangKyTaiKhoan.class.getName()).log(Level.SEVERE, null, ex);
            }
        return kq;
    }
    private int ktr(String ktr){
        int kq=0;
        try 
        { 
            String regex = "^\\d+$"; 
            if(ktr.matches(regex)) 
            { 
                kq=1;
            } 
        } 
        catch(Exception ex) 
        { 
            throw ex; 
        } 
        return kq;
    }
    private boolean ktrMaxacnhan(){
        int code = Integer.parseInt(txtCode.getText());
        int code1=Integer.parseInt(txtRdcode.getText());
        if(code == code1){
                return true;
            }
            return false;
    }
     private int DangKyTK(){
        int kq=0,kh,pass;
        double balance;
        String sodu,mk;
        sodu=txtSodu.getText();
        mk=txtMatkhau.getText();
        if( ktr(mk)== 0){
            JOptionPane.showMessageDialog(null,"Dữ liệu không hợp lệ"); 
        }
        else {
            kh=DangKyKh();
            balance=Double.parseDouble(sodu);
            pass=Integer.parseInt(mk);
            Account ac=null;
            try {
                ac=MoreAccount(kh, balance, pass, null, "Normal");
                kq=ac.getAccountid();
            } catch (SQLException ex) {
            Logger.getLogger(DangKyTaiKhoan.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
        return kq;
    }
    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        String code= String.valueOf(random());
        txtRdcode.setText(code);
    }//GEN-LAST:event_btnRefreshActionPerformed
    private boolean ktrnhap(){
       if(this.txtHo.getText().length()==0 || String.valueOf(txtTen.getParent()).length()==0 ||String.valueOf(txtCMND.getParent()).length()==0 ||
                String.valueOf(txtNgaysinh.getParent()).length()==0 || String.valueOf(txtMatkhau.getParent()).length()==0 ||
                String.valueOf(txtCode.getParent()).length()==0){
                    return true;
       }
       return false;
    }
    private void btnDangkyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDangkyActionPerformed
        if(ktrnhap()==true){
             JOptionPane.showMessageDialog(null,"Bạn chưa nhập đầy đủ thông tin", "Thông báo",1); 
        } 
        else {  
          if(ktrMaxacnhan()==true){
               int accode=DangKyTK();
               JOptionPane.showMessageDialog(null,"Đăng ký thành công - Mã tài khoản của bạn là : "+accode);
               txtHo.setText("");
               txtTen.setText("");
               txtCMND.setText("");
               txtNgaysinh.setText("");
               txtSodu.setText("");
               txtMatkhau.setText("");
               JOptionPane.showMessageDialog(null,"Xin mời đăng nhập để sử dụng hệ thông ATM của chúng tôi ");
               ATMSystem.showPanel(new Login());
            }
          else JOptionPane.showMessageDialog(null,"Mã xác nhận chưa đúng", "Thông báo",1);
        }
    }//GEN-LAST:event_btnDangkyActionPerformed

    private void txtSoduActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSoduActionPerformed
       
    }//GEN-LAST:event_txtSoduActionPerformed

    private void btnThoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThoatActionPerformed
       int n = JOptionPane.showConfirmDialog(null,"Bạn có chắc bạn muốn thoát khỏi?", "Cảnh báo",JOptionPane.YES_NO_OPTION);
        if(n == JOptionPane.YES_OPTION)
             ATMSystem.showPanel(new Wellcom());
    }//GEN-LAST:event_btnThoatActionPerformed
        
    private int rand(int min,int max){
        try {
                Random rn = new Random();
                int range = max - min + 1;
                int randomNum = min + rn.nextInt(range);
                return randomNum;
            } catch (Exception e) {
                e.printStackTrace();
                return -1;
            }
     }
    private int random(){
          int rand = rand(1000,9000);
          return rand;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDangky;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnThoat;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JTextField txtCMND;
    private javax.swing.JTextField txtCode;
    private javax.swing.JTextField txtHo;
    private javax.swing.JPasswordField txtMatkhau;
    private javax.swing.JTextField txtNgaysinh;
    private javax.swing.JTextField txtRdcode;
    private javax.swing.JTextField txtSodu;
    private javax.swing.JTextField txtTen;
    // End of variables declaration//GEN-END:variables
}
