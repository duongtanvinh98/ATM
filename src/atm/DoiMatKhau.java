/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package atm;
import static atm.Account.UpdatePass;
import java.sql.SQLException;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author PC
 */
public class DoiMatKhau extends javax.swing.JPanel {

    /**
     * Creates new form DoiMatKhau
     */
    public DoiMatKhau() {
        initComponents();
        String code=String.valueOf(random());
        txtRdcode.setText(code);
        txtRdcode.setEditable(false);
        String matk= String.valueOf(ATMSystem.account);
        txtMaTK.setText(matk);
        txtMaTK.setEditable(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtMaTK = new javax.swing.JTextField();
        txtMkcu = new javax.swing.JPasswordField();
        txtMkmoi = new javax.swing.JPasswordField();
        txtXacNhanMk = new javax.swing.JPasswordField();
        txtCode = new javax.swing.JTextField();
        txtRdcode = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        btnXacnhan = new javax.swing.JButton();
        btnThoat = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("Đổi mật khẩu");

        txtMaTK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaTKActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel2.setText("Mã tài khoản");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel3.setText("Mật khẩu củ");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel4.setText("Mật khẩu mới");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel5.setText("Xác nhận mật khẩu");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel6.setText("Mã xác nhận");

        btnXacnhan.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnXacnhan.setForeground(new java.awt.Color(0, 0, 153));
        btnXacnhan.setText("Xác nhận đổi");
        btnXacnhan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXacnhanActionPerformed(evt);
            }
        });

        btnThoat.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnThoat.setForeground(new java.awt.Color(204, 0, 0));
        btnThoat.setText("Thoát");
        btnThoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThoatActionPerformed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon("D:\\Source Code for Java\\ATM\\1.png")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(175, 175, 175)
                        .addComponent(btnXacnhan)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnThoat))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtCode)
                                .addGap(18, 18, 18)
                                .addComponent(txtRdcode, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtMkcu, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtMaTK, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtMkmoi, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtXacNhanMk, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(210, 210, 210)
                        .addComponent(jLabel1)))
                .addContainerGap(340, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMaTK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMkcu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMkmoi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtXacNhanMk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtRdcode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(13, 13, 13)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnXacnhan)
                            .addComponent(btnThoat)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(jButton3)))
                .addContainerGap(45, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtMaTKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaTKActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaTKActionPerformed
    private int ktrnhap(){
        int ktr=0;
        if(this.txtMkcu.getText().length()==0){
            ktr=1; 
        }
        else{
            if(this.txtMkmoi.getText().length()==0){
                ktr = 2;
            }
            else {
                if(this.txtXacNhanMk.getText().length()==0){
                    ktr=3;
                }
                else ktr =0;  
            }
        }
       return ktr;
    }
    
    private int ktrmkcu(){
        int tk=ATMSystem.account;
        int kq=0;
        int mkcu=Integer.parseInt(txtMkcu.getText());
            try {
                Account ac = new Account(tk);
                int rs=ac.getPass();
                if(rs==mkcu){
                     kq=rs;
                }
            } catch (SQLException ex) {
                Logger.getLogger(DoiMatKhau.class.getName()).log(Level.SEVERE, null, ex);
            }  
        return kq;
    }
    private int ktrmk(){
        int mkcu=ktrmkcu(),kq=0;
        int mkmoi=Integer.parseInt(txtMkmoi.getText());
        if(mkcu!=mkmoi){
            kq=mkmoi;
        }
        return kq;
    }
    private boolean ktrmkcopy(){
        int mkmoi=ktrmk();
        int mkcopy=Integer.parseInt(txtXacNhanMk.getText());
        if(mkmoi==mkcopy){
            return true;
        }
        return false;
    }
    private boolean Updatepass(){
        int tk=ATMSystem.account;
        int mkmoi=ktrmk();
        try {
            Account acc = UpdatePass(tk, mkmoi);
            if(acc==null){
                return true;
            }
        } catch (SQLException ex) {
            Logger.getLogger(DoiMatKhau.class.getName()).log(Level.SEVERE, null, ex);
        }
        return false;
    }
    private boolean ktrMaxacnhan(){
        int code = Integer.parseInt(txtCode.getText());
        int code1=Integer.parseInt(txtRdcode.getText());
        if(code == code1){
                return true;
            }
            return false;
    } 
    private void btnXacnhanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXacnhanActionPerformed
       if(ktrnhap()==1) JOptionPane.showMessageDialog(null,"Bạn chưa nhập mật khẩu cũ", "Thông báo",1);
       else if(ktrnhap()==2) JOptionPane.showMessageDialog(null,"Bạn chưa nhập mật khẩu mới", "Thông báo",1); 
       else if(ktrnhap()==3)  JOptionPane.showMessageDialog(null,"Bạn chưa nhập xác nhận mật khẩu", "Thông báo",1); 
       else { 
        if(ktrMaxacnhan()==true){
                if(ktrmkcu()==0)    
                    JOptionPane.showMessageDialog(null,"Mật khẩu cũ không đúng", "Thông báo",1);
                else { 
                    if(ktrmk()==0)
                    JOptionPane.showMessageDialog(null,"Mật khẩu mới không được trùng mới mật khẩu cũ", "Thông báo",1);
                    else {
                        if(ktrmkcopy()==false)
                            JOptionPane.showMessageDialog(null,"Mật khẩu xác nhận không khớp", "Thông báo",1);
                        else {
                                if(Updatepass()==false){
                                    JOptionPane.showMessageDialog(null,"Không thể đổi mật khẩu", "Thông báo",1);
                                    }
                                else {
                                    JOptionPane.showMessageDialog(null,"Đổi mật khẩu thành công", "Thông báo",1);
                                    txtMkcu.setText("");
                                    txtMkmoi.setText("");
                                    txtXacNhanMk.setText("");
                                    txtCode.setText("");
                                    int n = JOptionPane.showConfirmDialog(null,"Tiếp tục thực hiện các giao dịch ?", "Cảnh báo",JOptionPane.YES_NO_OPTION);
                                    if(n == JOptionPane.YES_OPTION)
                                         ATMSystem.showPanel(new Wellcom());
                                    else if(n==JOptionPane.NO_OPTION){
                                        ATMSystem.account=0;
                                        JOptionPane.showMessageDialog(null, "Bạn đã đăng xuất");
                                        ATMSystem.showPanel(new Login());   
                                   }
                                }
                             }
                        }
                    }
                }        
            else {
                JOptionPane.showMessageDialog(null,"Mã xác nhận chưa đúng", "Thông báo",1);
                String code= String.valueOf(random());
                txtRdcode.setText(code);
                txtCode.setText("");
            }
       } 
    }//GEN-LAST:event_btnXacnhanActionPerformed

    private void btnThoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThoatActionPerformed
        int n = JOptionPane.showConfirmDialog(null,"Bạn có chắc bạn muốn thoát khỏi?", "Cảnh báo",JOptionPane.YES_NO_OPTION);
        if(n == JOptionPane.YES_OPTION)
             ATMSystem.showPanel(new Wellcom());
    }//GEN-LAST:event_btnThoatActionPerformed

     private int rand(int min,int max){
        try {
                Random rn = new Random();
                int range = max - min + 1;
                int randomNum = min + rn.nextInt(range);
                return randomNum;
            } catch (Exception e) {
                e.printStackTrace();
                return -1;
            }
     }
    private int random(){
          int rand = rand(1000,9000);
          return rand;
    }   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnThoat;
    private javax.swing.JButton btnXacnhan;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField txtCode;
    private javax.swing.JTextField txtMaTK;
    private javax.swing.JPasswordField txtMkcu;
    private javax.swing.JPasswordField txtMkmoi;
    private javax.swing.JTextField txtRdcode;
    private javax.swing.JPasswordField txtXacNhanMk;
    // End of variables declaration//GEN-END:variables
}
